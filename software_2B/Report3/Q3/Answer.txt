【静的ライブラリ】
実験結果 → 静的ライブラリ（libmessage.a）を削除した後も、プログラム（test_static）は正常に動作した。

理由：
静的ライブラリを使用したプログラムが正常に動作する理由は、
コンパイル時にライブラリの内容がプログラム本体に完全に埋め込まれるためである。

静的リンクは「コンパイル時結合」の仕組みであり、ライブラリの内容を事前にプログラムに取り込むため、
実行時にライブラリファイルの存在に依存しない。



【動的ライブラリ】
実験結果 → 動的ライブラリ（libmessage.so）を削除した後、プログラム（test_dynamic）の実行時に以下のエラーが発生した：
./test_dynamic: error while loading shared libraries: libmessage.so: cannot open shared object file: No such file or directory

理由：
動的ライブラリを使用したプログラムがエラーになる理由は、
実行時にライブラリファイルを動的に読み込む仕組みになっているためである。

動的ライブラリの根本的な特徴である「実行時の外部依存性」を明確に示している。